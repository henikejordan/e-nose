package controle;

import javax.swing.JOptionPane;

/**
 *
 * @author usuario
 */
public final class EditarPressao extends javax.swing.JFrame implements Editar {

    private static EditarPressao instance = null;
    private final String[] opcInfo = {"Pressão Atmosférica"};
    private final int[] opcIndices = {18};
    private String[] info;
    private int[] indices;
    private final boolean[] estado = new boolean[1];

    /**
     * Creates new form EditarGases
     */
    private EditarPressao() {
        initComponents();
        estadoAtual();
        preencheVetores();
    }

    public static EditarPressao getInstance() {
        if (instance == null) {
            instance = new EditarPressao();
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxPressao = new javax.swing.JCheckBox();
        jButtonConfirmar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jCheckBoxPressao.setSelected(true);
        jCheckBoxPressao.setText("Pressão Atmosférica");

        jButtonConfirmar.setText("Confirmar");
        jButtonConfirmar.setSelected(true);
        jButtonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonConfirmar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxPressao)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jCheckBoxPressao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConfirmar)
                    .addComponent(jButtonCancelar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarActionPerformed
        if (!isSelecionado()) {
            JOptionPane.showMessageDialog(null, "Selecione pelo menos uma opção");
            return;
        }
        estadoAtual();
        preencheVetores();
        dispose();
    }//GEN-LAST:event_jButtonConfirmarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        estadoAnterior();
        dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        estadoAnterior();
        dispose();
    }//GEN-LAST:event_formWindowClosing

    @Override
    public boolean isSelecionado() {
        return jCheckBoxPressao.isSelected();
    }

    @Override
    public void estadoAtual() {
        estado[0] = jCheckBoxPressao.isSelected();
    }

    @Override
    public void estadoAnterior() {
        jCheckBoxPressao.setSelected(estado[0]);
    }

    @Override
    public void preencheVetores() {
        int aux = 0;
        for (int i = 0; i < estado.length; i++) {
            if (estado[i]) {
                aux++;
            }
        }
        indices = new int[aux];
        info = new String[aux];
        aux = 0;
        for (int i = 0; i < estado.length; i++) {
            if (estado[i]) {
                info[aux] = opcInfo[i];
                indices[aux] = opcIndices[i];
                aux++;
            }
        }
    }

    @Override
    public String[] getOpcInfo() {
        return opcInfo;
    }

    @Override
    public int[] getOpcIndices() {
        return opcIndices;
    }

    @Override
    public String[] getInfo() {
        return info;
    }

    @Override
    public int[] getIndices() {
        return indices;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonConfirmar;
    private javax.swing.JCheckBox jCheckBoxPressao;
    // End of variables declaration//GEN-END:variables
}
