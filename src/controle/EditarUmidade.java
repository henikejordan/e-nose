package controle;

import javax.swing.JOptionPane;

/**
 *
 * @author usuario
 */
public final class EditarUmidade extends javax.swing.JFrame implements Editar {

    private static EditarUmidade instance = null;
    private final String[] opcInfo = {"Umidade do Ar"};
    private final int[] opcIndices = {20};
    private String[] info;
    private int[] indices;
    private final boolean[] estado = new boolean[1];

    /**
     * Creates new form EditarGases
     */
    private EditarUmidade() {
        initComponents();
        estadoAtual();
        preencheVetores();
    }

    public static EditarUmidade getInstance() {
        if (instance == null) {
            instance = new EditarUmidade();
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxUmidade = new javax.swing.JCheckBox();
        jButtonConfirmar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jIntegerFieldMedia = new util.JIntegerField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jCheckBoxUmidade.setSelected(true);
        jCheckBoxUmidade.setText("Umidade do Ar");

        jButtonConfirmar.setText("Confirmar");
        jButtonConfirmar.setSelected(true);
        jButtonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jLabel1.setText("Média móvel:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonConfirmar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jCheckBoxUmidade))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jIntegerFieldMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jCheckBoxUmidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jIntegerFieldMedia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConfirmar)
                    .addComponent(jButtonCancelar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarActionPerformed
        if (!isSelecionado()) {
            JOptionPane.showMessageDialog(null, "Selecione pelo menos uma opção");
            return;
        }
        estadoAtual();
        preencheVetores();
        dispose();
    }//GEN-LAST:event_jButtonConfirmarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        estadoAnterior();
        dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        estadoAnterior();
        dispose();
    }//GEN-LAST:event_formWindowClosing

    @Override
    public boolean isSelecionado() {
        return jCheckBoxUmidade.isSelected();
    }

    @Override
    public void estadoAtual() {
        estado[0] = jCheckBoxUmidade.isSelected();
    }

    @Override
    public void estadoAnterior() {
        jCheckBoxUmidade.setSelected(estado[0]);
    }

    @Override
    public void preencheVetores() {
        int aux = 0;
        for (int i = 0; i < estado.length; i++) {
            if (estado[i]) {
                aux++;
            }
        }
        indices = new int[aux];
        info = new String[aux];
        aux = 0;
        for (int i = 0; i < estado.length; i++) {
            if (estado[i]) {
                info[aux] = opcInfo[i];
                indices[aux] = opcIndices[i];
                aux++;
            }
        }
    }

    @Override
    public String[] getOpcInfo() {
        return opcInfo;
    }

    @Override
    public int[] getOpcIndices() {
        return opcIndices;
    }

    @Override
    public String[] getInfo() {
        return info;
    }

    @Override
    public int[] getIndices() {
        return indices;
    }

    @Override
    public int getMedia() {
        return Integer.parseInt(jIntegerFieldMedia.getText());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonConfirmar;
    private javax.swing.JCheckBox jCheckBoxUmidade;
    private util.JIntegerField jIntegerFieldMedia;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
